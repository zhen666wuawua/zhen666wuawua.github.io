<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>My first post 与  Hexo常用操作</title>
    <link href="/2022/04/16/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/Hexo%E5%8D%9A%E5%AE%A2Markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%20(3)/"/>
    <url>/2022/04/16/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/Hexo%E5%8D%9A%E5%AE%A2Markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%20(3)/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Hexo常用操作"><a href="#Hexo常用操作" class="headerlink" title="Hexo常用操作"></a>Hexo常用操作</h2><h3 id="创建新的博客文章"><a href="#创建新的博客文章" class="headerlink" title="创建新的博客文章"></a>创建新的博客文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行本地服务器"><a href="#运行本地服务器" class="headerlink" title="运行本地服务器"></a>运行本地服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br></code></pre></td></tr></table></figure><ul><li>用于启动本地server，预览主题，预览地址为： <a href="http://localhost:4000/">http://localhost:4000/</a></li><li>预览同时，可以随时修改文章内容、主题代码。保存后刷新网页即可</li><li>如果对Hexo根目录_config.yml进行修改，需要重启本地服务器后才能预览效果</li></ul><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="部署到远程服务器"><a href="#部署到远程服务器" class="headerlink" title="部署到远程服务器"></a>部署到远程服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d<br></code></pre></td></tr></table></figure><ul><li>自动生成网站静态文件public，并部署到远程服务器</li></ul><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br></code></pre></td></tr></table></figure><ul><li>生成网站静态文件，保存到默认public文件夹</li><li>如果使用自动部署命令hexo d，则不需要先执行该命令</li></ul><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="清除缓存文件"><a href="#清除缓存文件" class="headerlink" title="清除缓存文件"></a>清除缓存文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br></code></pre></td></tr></table></figure><ul><li>清除缓存文件db.json与静态文件夹public</li><li>网站显示异常时，可以执行改命令</li></ul><h3 id="创建aboutme页面"><a href="#创建aboutme页面" class="headerlink" title="创建aboutme页面"></a>创建<code>aboutme</code>页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page aboutme<br></code></pre></td></tr></table></figure><ul><li>新建标题为<code>aboutme</code>的页面，默认地址:<code>主页地址/aboutme</code></li><li>页面标题和文章一样，可以随意修改，也可以改为中文</li><li>页面不会出现在首页文章列表和归档中，不支持设置分类和标签</li></ul>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>Hexo建站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客Markdown文件中插入B站视频</title>
    <link href="/2022/04/16/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/Hexo%E5%8D%9A%E5%AE%A2Markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%20(1)/"/>
    <url>/2022/04/16/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/Hexo%E5%8D%9A%E5%AE%A2Markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%20(1)/</url>
    
    <content type="html"><![CDATA[<h3 id="问题：在不用插件的情况下，用B站官方的嵌入代码方式引入视频，视频屏幕很小"><a href="#问题：在不用插件的情况下，用B站官方的嵌入代码方式引入视频，视频屏幕很小" class="headerlink" title="问题：在不用插件的情况下，用B站官方的嵌入代码方式引入视频，视频屏幕很小"></a>问题：在不用插件的情况下，用B站官方的<code>嵌入代码</code>方式引入视频，视频屏幕很小</h3><p><img src="/../../images/b%E7%AB%99%E5%B5%8C%E5%85%A5%E4%BB%A3%E7%A0%81.png" alt="b站嵌入代码"></p><p>如下：</p><iframe src="//player.bilibili.com/player.html?aid=212464091&bvid=BV1xa411t7JK&cid=553318499&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="办法1、修改width和height"><a href="#办法1、修改width和height" class="headerlink" title="办法1、修改width和height"></a>办法1、修改width和height</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">width</span>=<span class="hljs-string">200</span> <span class="hljs-attr">height</span>=<span class="hljs-string">200</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bilibili&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//player.bilibili.com/player.html?aid=212464091&amp;bvid=BV1xa411t7JK&amp;cid=553318499&amp;page=1&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span></span> <span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>通过修改width和height来调整视频大小，但是换成不同的设备无法正常显示.</p><h4 id="办法2、添加css自定义代码"><a href="#办法2、添加css自定义代码" class="headerlink" title="办法2、添加css自定义代码"></a>办法2、添加css自定义代码</h4><ul><li>使用<code>@media</code>属性，对不同屏幕大小的设备，设置宽度和高度</li><li><code>@media</code>可以查询到设备属性, 比如：屏幕高度、设备方向（如移动设备横屏）、可视窗口的宽高、屏幕解析度等</li></ul><p>修改方法：</p><ul><li>以<code>matery</code>主题为例， 找到主题文件夹下的<code>/hexo-theme-matery/source/css/my.css</code>文件，在文件中添加如下代码：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* Here is your custom css styles. */</span><br><br><span class="hljs-comment">/*哔哩哔哩视频适配*/</span><br><br><span class="hljs-selector-class">.bilibili</span> &#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><span class="hljs-keyword">@media</span> <span class="hljs-keyword">only</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">767px</span>) &#123;<br>    <span class="hljs-selector-class">.bilibili</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">15em</span>;<span class="hljs-attribute">max-width</span>: <span class="hljs-number">25em</span>;&#125;<br>&#125;<br><span class="hljs-keyword">@media</span> <span class="hljs-keyword">only</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">991px</span>) &#123;<br>    <span class="hljs-selector-class">.bilibili</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">20em</span>;<span class="hljs-attribute">max-width</span>: <span class="hljs-number">30em</span>;&#125;<br>&#125;<br><span class="hljs-keyword">@media</span> <span class="hljs-keyword">only</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">992px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">1199px</span>) &#123;<br>    <span class="hljs-selector-class">.bilibili</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">30em</span>;<span class="hljs-attribute">max-width</span>: <span class="hljs-number">40em</span>;&#125;<br>&#125;<br><span class="hljs-keyword">@media</span> <span class="hljs-keyword">only</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1200px</span>) &#123;<br>    <span class="hljs-selector-class">.bilibili</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">40em</span>;<span class="hljs-attribute">max-width</span>: <span class="hljs-number">50em</span>;&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>在B站嵌入代码中添加<code>class=&quot;bilibili&quot;</code>属性，如下：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bilibili&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//player.bilibili.com/player.html?aid=212464091&amp;bvid=BV1xa411t7JK&amp;cid=553318499&amp;page=1&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span></span> <span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ul><p>效果如下：</p><iframe class="bilibili" src="//player.bilibili.com/player.html?aid=212464091&bvid=BV1xa411t7JK&cid=553318499&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>Hexo建站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Markdown</tag>
      
      <tag>Matery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>傅里叶变换的本质与Python代码实现</title>
    <link href="/2022/04/16/4-Python%E5%BC%80%E5%8F%91/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E7%9A%84%E6%9C%AC%E8%B4%A8%E4%B8%8EPython%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <url>/2022/04/16/4-Python%E5%BC%80%E5%8F%91/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E7%9A%84%E6%9C%AC%E8%B4%A8%E4%B8%8EPython%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="一、连续傅里叶变换"><a href="#一、连续傅里叶变换" class="headerlink" title="一、连续傅里叶变换"></a>一、连续傅里叶变换</h2><p>关于傅里叶变换的直观理解，大家可以移步B站UP主“3Blue1Brown”视频，这个视频讲解的很清楚。</p><div class="bilibili">    <iframe class="bilibili" src="https://player.bilibili.com/player.html?aid=62763042&bvid=BV1vt411N7Ti&cid=121886213&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><p>傅里叶变换的公式为：<br><img src="/../../images/%E5%9B%BE%E7%89%871.png" alt="角频率ω-时间t"></p><p><img src="/../../images/%E5%9B%BE%E7%89%872.png" alt="数字频率f-时间t"></p><p>数字频率f与角频率ω之间的关系：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">ω = f / fs * <span class="hljs-number">2</span> * np.pi<br></code></pre></td></tr></table></figure><p>其中fs为采样率</p><h2 id="二、离散傅里叶变换"><a href="#二、离散傅里叶变换" class="headerlink" title="二、离散傅里叶变换"></a>二、离散傅里叶变换</h2><p>该部分后续补充</p><h2 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># encoding:utf-8</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">__time__    : 2022/4/10 17:10</span><br><span class="hljs-string">__author__  : LIU SIYU</span><br><span class="hljs-string">__email__   :18811379768@163.com</span><br><span class="hljs-string">__address__ :Beijing Institute of Technology</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> scipy.fftpack <span class="hljs-keyword">import</span> fft, ifft<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> matplotlib.pylab <span class="hljs-keyword">import</span> mpl<br><br>mpl.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]  <span class="hljs-comment"># 显示中文</span><br>mpl.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span>  <span class="hljs-comment"># 显示负号</span><br><br><span class="hljs-comment"># 采样点选择1400个，因为设置的信号频率分量最高为600赫兹，根据采样定理知采样频率要大于信号频率2倍，所以这里设置采样频率为1400赫兹（即一秒内有1400个采样点，一样意思的）</span><br>fs = <span class="hljs-number">1400</span>  <span class="hljs-comment"># 信号采样率为fs，1400Hz</span><br>x = np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, fs)<br><br><span class="hljs-comment"># 设置需要采样的信号，频率分量有200，400和600</span><br>y = <span class="hljs-number">7</span> * np.sin(<span class="hljs-number">2</span> * np.pi * <span class="hljs-number">200</span> * x) + <span class="hljs-number">5</span> * np.sin(<span class="hljs-number">2</span> * np.pi * <span class="hljs-number">400</span> * x) + <span class="hljs-number">3</span> * np.sin(<span class="hljs-number">2</span> * np.pi * <span class="hljs-number">600</span> * x)<br><br>fft_y = fft(y)  <span class="hljs-comment"># 快速傅里叶变换</span><br><br>N = <span class="hljs-number">1400</span><br>x = np.arange(N)  <span class="hljs-comment"># 频率个数</span><br>half_x = x[<span class="hljs-built_in">range</span>(<span class="hljs-built_in">int</span>(N / <span class="hljs-number">2</span>))]  <span class="hljs-comment"># 取一半区间</span><br>half_w = half_x / fs * (<span class="hljs-number">2</span> * np.pi)<br><br>abs_y = np.<span class="hljs-built_in">abs</span>(fft_y)  <span class="hljs-comment"># 取复数的绝对值，即复数的模(双边频谱)</span><br>angle_y = np.angle(fft_y)  <span class="hljs-comment"># 取复数的角度</span><br>normalization_y = abs_y / N  <span class="hljs-comment"># 归一化处理（双边频谱）</span><br>normalization_half_y = normalization_y[<span class="hljs-built_in">range</span>(<span class="hljs-built_in">int</span>(N / <span class="hljs-number">2</span>))]  <span class="hljs-comment"># 由于对称性，只取一半区间（单边频谱）</span><br><br>plt.subplot(<span class="hljs-number">231</span>)<br>plt.plot(x, y)<br>plt.title(<span class="hljs-string">&#x27;原始波形&#x27;</span>)<br><br>plt.subplot(<span class="hljs-number">232</span>)<br>plt.plot(x, fft_y, <span class="hljs-string">&#x27;black&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;双边振幅谱(未求振幅绝对值)&#x27;</span>, fontsize=<span class="hljs-number">9</span>, color=<span class="hljs-string">&#x27;black&#x27;</span>)<br><br>plt.subplot(<span class="hljs-number">233</span>)<br>plt.plot(x, abs_y, <span class="hljs-string">&#x27;r&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;双边振幅谱(未归一化)&#x27;</span>, fontsize=<span class="hljs-number">9</span>, color=<span class="hljs-string">&#x27;red&#x27;</span>)<br><br>plt.subplot(<span class="hljs-number">234</span>)<br>plt.plot(x, angle_y, <span class="hljs-string">&#x27;violet&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;双边相位谱(未归一化)&#x27;</span>, fontsize=<span class="hljs-number">9</span>, color=<span class="hljs-string">&#x27;violet&#x27;</span>)<br><br>plt.subplot(<span class="hljs-number">235</span>)<br>plt.plot(x, normalization_y, <span class="hljs-string">&#x27;g&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;双边振幅谱(归一化)&#x27;</span>, fontsize=<span class="hljs-number">9</span>, color=<span class="hljs-string">&#x27;green&#x27;</span>)<br><br>plt.subplot(<span class="hljs-number">236</span>)<br>plt.plot(half_w, normalization_half_y, <span class="hljs-string">&#x27;blue&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;单边振幅谱(归一化)&#x27;</span>, fontsize=<span class="hljs-number">9</span>, color=<span class="hljs-string">&#x27;blue&#x27;</span>)<br><br>plt.show()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>傅里叶变换</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇百科</title>
    <link href="/2022/04/16/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E7%99%BE%E7%A7%91/"/>
    <url>/2022/04/16/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E7%99%BE%E7%A7%91/</url>
    
    <content type="html"><![CDATA[<p>hello 大家好</p><iframe src="//player.bilibili.com/player.html?aid=510705734&bvid=BV12u411C7EH&cid=577315002&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/16/hello-world/"/>
    <url>/2022/04/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python-Scipy包中的各模块介绍与数值微积分</title>
    <link href="/2022/04/13/4-Python%E5%BC%80%E5%8F%91/Python-Scipy%E5%8C%85%E4%B8%AD%E7%9A%84%E5%90%84%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D%E4%B8%8E%E6%95%B0%E5%80%BC%E5%BE%AE%E7%A7%AF%E5%88%86/"/>
    <url>/2022/04/13/4-Python%E5%BC%80%E5%8F%91/Python-Scipy%E5%8C%85%E4%B8%AD%E7%9A%84%E5%90%84%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D%E4%B8%8E%E6%95%B0%E5%80%BC%E5%BE%AE%E7%A7%AF%E5%88%86/</url>
    
    <content type="html"><![CDATA[<h2 id="1-SciPy中的各模块介绍"><a href="#1-SciPy中的各模块介绍" class="headerlink" title="1 SciPy中的各模块介绍"></a>1 SciPy中的各模块介绍</h2><ul><li>SciPy 是一个开源的 Python 算法库和数学工具包。基于 Numpy 的科学计算库，用于数学、科学、工程学等领域，很多有一些高阶抽象和物理模型需要使用。</li><li>SciPy 包含的模块有最优化、线性代数、积分、插值、特殊函数、快速傅里叶变换、信号处理和图像处理、常微分方程求解和其他科学与工程中常用的计算。</li></ul><table><thead><tr><th>模块名</th><th>功能</th><th>参考文档</th></tr></thead><tbody><tr><td>scipy.cluster</td><td>向量量化</td><td><a href="https://docs.scipy.org/doc/scipy/reference/cluster.html">cluster API</a></td></tr><tr><td>scipy.constants</td><td>数学常量</td><td><a href="https://docs.scipy.org/doc/scipy/reference/constants.html">constants API</a></td></tr><tr><td>scipy.fft</td><td>快速傅里叶变换</td><td><a href="https://docs.scipy.org/doc/scipy/reference/fft.html">fft API</a></td></tr><tr><td>scipy.integrate</td><td>积分</td><td><a href="https://docs.scipy.org/doc/scipy/reference/integrate.html">integrate API</a></td></tr><tr><td>scipy.interpolate</td><td>插值</td><td><a href="https://docs.scipy.org/doc/scipy/reference/interpolate.html">interpolate API</a></td></tr><tr><td>scipy.io</td><td>数据输入输出</td><td><a href="https://docs.scipy.org/doc/scipy/reference/io.html">io API</a></td></tr><tr><td>scipy.linalg</td><td>线性代数</td><td><a href="https://docs.scipy.org/doc/scipy/reference/linalg.html">linalg API</a></td></tr><tr><td>scipy.misc</td><td>图像处理</td><td><a href="https://docs.scipy.org/doc/scipy/reference/misc.html">misc API</a></td></tr><tr><td>scipy.ndimage</td><td>N 维图像</td><td><a href="https://docs.scipy.org/doc/scipy/reference/ndimage.html">ndimage API</a></td></tr><tr><td>scipy.odr</td><td>正交距离回归</td><td><a href="https://docs.scipy.org/doc/scipy/reference/odr.html">odr API</a></td></tr><tr><td>scipy.optimize</td><td>优化算法</td><td><a href="https://docs.scipy.org/doc/scipy/reference/optimize.html">optimize API</a></td></tr><tr><td>scipy.signal</td><td>信号处理</td><td><a href="https://docs.scipy.org/doc/scipy/reference/signal.html">signal API</a></td></tr><tr><td>scipy.sparse</td><td>稀疏矩阵</td><td><a href="https://docs.scipy.org/doc/scipy/reference/sparse.html">sparse API</a></td></tr><tr><td>scipy.spatial</td><td>空间数据结构和算法</td><td><a href="https://docs.scipy.org/doc/scipy/reference/spatial.html">spatial API</a></td></tr><tr><td>scipy.special</td><td>特殊数学函数</td><td><a href="https://docs.scipy.org/doc/scipy/reference/special.html">special API</a></td></tr><tr><td>scipy&#x2F;stats</td><td>统计函数</td><td><a href="https://docs.scipy.org/doc/scipy/reference/stats.mstats.html">stats.mstats API</a></td></tr></tbody></table><h2 id="2-连续函数求积分"><a href="#2-连续函数求积分" class="headerlink" title="2 连续函数求积分"></a>2 连续函数求积分</h2><h3 id="一重连续积分"><a href="#一重连续积分" class="headerlink" title="一重连续积分"></a>一重连续积分</h3><p>scipy.integrate中的<code>integrate.quad</code>函数</p><p>$$<br>I(f)&#x3D;∫0π(sinx−cosx)dx<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 答案区</span><br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">from</span> scipy <span class="hljs-keyword">import</span> integrate<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> math.sin(x)-math.cos(x)<br><br>v,err = integrate.quad(f,<span class="hljs-number">0</span>,math.pi)<br><span class="hljs-built_in">print</span>(v)<br></code></pre></td></tr></table></figure><h3 id="二重连续积分"><a href="#二重连续积分" class="headerlink" title="二重连续积分"></a>二重连续积分</h3><p>scipy.integrate中的<code>integrate.dblquad</code>函数</p><p>$$<br>I(f(x,y))&#x3D;∫ab​∫h(x)g(x)f(x,y)dxdy<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># dblquad函数的第一个形参应是f(x,y)、第2、3、4、5分别是a、b、g(x)、h(x),也就是说dblquad函数的第4和5是一个函数</span><br><span class="hljs-keyword">from</span> scipy <span class="hljs-keyword">import</span> integrate<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">x, y</span>):<br>    <span class="hljs-keyword">return</span> x * y<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">h</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> x<br>v, err = integrate.dblquad(f, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-keyword">lambda</span> x: <span class="hljs-number">1</span>, h)<br><span class="hljs-built_in">print</span> (v)<br></code></pre></td></tr></table></figure><h2 id="3-离散函数求积分"><a href="#3-离散函数求积分" class="headerlink" title="3 离散函数求积分"></a>3 离散函数求积分</h2><p>trapz和cumtrapz均是用梯形法来计算数值积分,位于<code>scipy.integrate</code>中,使用方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">scipy.integrate.cumtrapz(a, self.t, initial=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p><strong><code>trapz</code>和<code>cumtrapz</code>的区别</strong>：</p><ul><li><code>trapz</code>只是算出一个最后的结果即把y从t0到t100积分的值；</li><li>而<code>cumtrapz</code>会把中间每一步的结果都算出来，即计算出y从t0到t0积分的值，从t0到t1积分的值，从t0到t2积分的值……直到最后结果。</li></ul><p><strong>求取一至三重积分的函数分别为</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">integrate.quad(func,a,b,args,full_output)<br>integrate.dblquad(func,a,b,gfun,hfun,args,epsabs,epsrel)<br>integrate.tplquad(func,a,b,gfun,hfun,qfun,rfun,args,epsabs,epsrel)<br></code></pre></td></tr></table></figure><p>以三重积分为例。func为运算对象函数，形式为func(z,y,x)。a,b对应变量x的积分区域，gfun,hfun对应变量y的积分区域，依次类推。</p><p><strong>注意</strong>：gfun,hfun等的形式应为函数，其中gfun,hfun是自变量为x的函数，qfun,rfun是自变量为x,y的函数。这些函数可以使用lambda函数进行定义，形式通常为：<br><code>lambda x,y:x*y</code><br>如果是常函数，则定义为：<br><code>lambda x:0</code><br><code>lambda x,y:1</code></p><h2 id="4-求微分"><a href="#4-求微分" class="headerlink" title="4 求微分"></a>4 求微分</h2><ul><li>使用Scipy求解微分方程主要使用<code>scipy.integrate</code>模块，函数是<code>odeint</code>,<code>solve_ivp</code>（初值问题），可以求解一阶、二阶以及高阶方程或方程组。</li></ul><p>参考：<a href="https://www.runoob.com/scipy/scipy-tutorial.html">SciPy 教程 | 菜鸟教程 (runoob.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>数值积分</category>
      
      <category>Python</category>
      
      <category>Scipy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值积分</tag>
      
      <tag>Python</tag>
      
      <tag>Scipy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo中使用的MarkDown(GFM)语法</title>
    <link href="/2022/04/13/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/Hexo%E5%8D%9A%E5%AE%A2Markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%20(2)/"/>
    <url>/2022/04/13/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/Hexo%E5%8D%9A%E5%AE%A2Markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%20(2)/</url>
    
    <content type="html"><![CDATA[<h2 id="1-语法介绍"><a href="#1-语法介绍" class="headerlink" title="1 语法介绍"></a>1 语法介绍</h2><ul><li>Markdown是一种轻量级标记语言，允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。</li><li>Hexo下使用的MarkDown语法为Github中的GFM，风格简洁美观。但是GFM 的MarkDown语法和标准的MarkDown稍有不同，使用过程中需要注意一些。</li><li>GFM（GitHub Flavored Markdown）语法是除了标准的Markdown语法外最被广泛使用的另一种版本Markdown语法，基于CommonMark。</li></ul><h2 id="2-语法元素"><a href="#2-语法元素" class="headerlink" title="2 语法元素"></a>2 语法元素</h2><table><thead><tr><th>功能</th><th>组成元素</th><th>备注</th></tr></thead><tbody><tr><td>换行</td><td><code>一个回车</code></td><td></td></tr><tr><td>分段</td><td><code>二个回车</code></td><td></td></tr><tr><td>标题</td><td><code># ~ ######</code></td><td>#号的个数表示几级标题，即表示一级标题到六级标题</td></tr><tr><td>强调</td><td><code>**文字** ， __文字__ ， _文字_ ， *文字* ， ~~文字~~</code></td><td></td></tr><tr><td>斜体</td><td><code>*文字*</code></td><td></td></tr><tr><td>分割线</td><td><code>***, ___</code></td><td></td></tr><tr><td>区块</td><td><code>&gt; </code></td><td>注意后面紧跟个空格，<code>两个回车</code>结束引用</td></tr><tr><td>表格</td><td><code>- 和 分割行和列</code> ， <code>: 控制对其方式</code></td><td><del>使用<code>冒号</code>定义对齐方式，使用<code>-</code>的长度定义表格宽度</del></td></tr><tr><td>代码块</td><td><code>`代码内容`</code>或 <code>```代码内容```</code></td><td></td></tr><tr><td>链接</td><td><code>[文字](链接地址)</code></td><td></td></tr><tr><td>图片</td><td><code>![图片说明](图片地址)</code></td><td>地址可以是本地路劲，也可以是网络地址</td></tr><tr><td>列表</td><td><code>* ， + ， - ， 1.</code>，选其中之一</td><td>注意后面紧跟个空格</td></tr><tr><td>公式</td><td><code>独行公式 $$ x=y+1 $$， 单行公式 $ x=y+1 $</code></td><td>注意后面紧跟个空格或者换行</td></tr></tbody></table><h2 id="3-高级用法"><a href="#3-高级用法" class="headerlink" title="3 高级用法"></a>3 高级用法</h2><ul><li>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。参考：<a href="https://www.runoob.com/markdown/md-advance.html">Markdown 高级技巧 | 菜鸟教程 (runoob.com)</a></li><li>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，<br>如：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">使用<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span></span>Ctrl<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span></span>Alt<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span></span>Del<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span></span>重启电脑<br></code></pre></td></tr></table></figure><h2 id="4-公式"><a href="#4-公式" class="headerlink" title="4 公式"></a>4 公式</h2><ul><li>首先需要在主题里面的 <code>_config.yml</code> 中开启数学公式支持：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 是否激活mathjax数学公式，这是全局配置，但文章仍然不会都开启mathjax渲染，</span><br><span class="hljs-comment"># 考虑到mathjax加载比较耗时，你还需要在需要渲染的文章的Front-matter中再加上`mathjax: true`才行.</span><br><span class="hljs-attr">mathjax:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">cdn:</span> <span class="hljs-string">https://cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span><br></code></pre></td></tr></table></figure><ul><li>之后，需要在每篇文章的MD文件中开启<code>mathjax: true</code>title: Hexo中使用的MarkDown(GFM)语法</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">title: Hexo中使用的MarkDown(GFM)语法<br>mathjax: true<br></code></pre></td></tr></table></figure><p>效果如下：</p><p>$$<br>\int_{0}^\infty {f(x)dx}<br>$$</p><p>$$<br>x&#x3D;y +1<br>$$</p><p>$ x&#x3D;y+1 $</p><p>参考：<a href="https://zhuanlan.zhihu.com/p/35988761">Hexo构建blog时渲染LaTeX数学公式的问题 - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>Hexo建站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>MarkDown</tag>
      
      <tag>GFM</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
